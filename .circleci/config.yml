version: 2.1

# Only run job on main branch.
main_only: &main_only
  filters:
    branches:
      only: main

executors:
  node:
    docker:
      - image: cimg/node:16.0

commands:
  install_dependencies:
    description: 'Installs all project dependencies.'
    steps:
      - checkout
      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-packages-{{ checksum "./code/yarn.lock" }}
      - run:
          name: Install root dependencies
          command: yarn install --check-cache
          working_directory: ./code
      - save_cache:
          name: Save yarn cache
          key: yarn-packages-{{ checksum "./code/yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/unplugged
      - run:
          name: Build utility library
          command: yarn run build
          working_directory: ./code/utils

jobs:
  build:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Build application
          command: yarn run build
          working_directory: ./code/app

  inspect:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Run TypeScript checks
          command: yarn run check
          working_directory: ./code
      - run:
          name: Run ESLint
          command: yarn run eslint --max-warnings 0
          working_directory: ./code
      - run:
          name: Run Stylelint
          command: yarn run stylelint
          working_directory: ./code

  test:
    docker:
      - image: cimg/node:16.0
      - image: mysql/mysql-server:8.0
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_HOST: localhost
          MYSQL_USER: munity
          MYSQL_PASSWORD: munity
          MYSQL_DATABASE: munity
    steps:
      - install_dependencies
      - run: mkdir -p ~/test-results
      - run:
          name: Run utility tests
          command: yarn run test
          working_directory: ./code/utils
      - run:
          name: Run CLI tests
          # command: yarn run test --reporter mocha-junit-reporter --reporter-options mochaFile=~/test-results/cli.xml
          command: yarn run test
          working_directory: ./code/cli
      - store_test_results:
          path: ~/test-results

workflows:
  build-inspect-test:
    jobs:
      - build:
          <<: *main_only
      - inspect:
          <<: *main_only
      - test
