version: 2.1

executors:
  node:
    docker:
      - image: cimg/node:14.0

commands:
  install_dependencies:
    description: 'Installs all project dependencies.'
    steps:
      - checkout
      - run:
          name: Consolidate package-lock.json files
          command: packages=(. app cli utils) && printf '%s\n' "${packages[@]}" | awk -F packages '{printf "\"%s/package-lock.json\" ", $1}' | xargs cat > combined-package-lock.txt
          working_directory: ./code
      - restore_cache:
          keys:
            - app-{{ checksum "./code/package-lock.json" }}-{{ checksum "./code/combined-package-lock.txt" }}
            - app-
      - run:
          name: Install root dependencies
          command: npm install
          working_directory: ./code
      - run:
          name: Install subpackage dependencies
          command: npm run bootstrap
          working_directory: ./code
      - run:
          name: Build utility library
          command: npm run build:utils
          working_directory: ./code

jobs:
  build:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Build application
          command: npm run build:app
          working_directory: ./code
      - save_cache:
          paths:
            - ~/project/code/node_modules
            - ~/project/code/app/.next/cache
            - ~/project/code/app/node_modules
            - ~/project/code/cli/node_modules
            - ~/project/code/utils/dist
            - ~/project/code/utils/node_modules
          key: app-{{ checksum "./code/package-lock.json" }}-{{ checksum "./code/combined-package-lock.txt" }}

  inspect:
    executor: node
    steps:
      - install_dependencies
      - run:
          name: Run TypeScript checks
          command: npm run check
          working_directory: ./code
      - run:
          name: Run ESLint
          command: npm run eslint -- --max-warnings 0
          working_directory: ./code
      - run:
          name: Run Stylelint
          command: npm run stylelint
          working_directory: ./code

  test:
    docker:
      - image: cimg/node:14.0
      - image: mysql/mysql-server:8.0
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_HOST: localhost
          MYSQL_USER: munity
          MYSQL_PASSWORD: munity
          MYSQL_DATABASE: munity
    steps:
      - install_dependencies
      - run: mkdir ~/test-results
      - run:
          name: Run utility tests
          command: npm run test -- --reporter mocha-junit-reporter --reporter-options mochaFile=~/test-results/utils.xml
          working_directory: ./code/utils
      - run:
          name: Run CLI tests
          command: npm run test -- --reporter mocha-junit-reporter --reporter-options mochaFile=~/test-results/cli.xml
          working_directory: ./code/cli
      - store_test_results:
          path: ~/test-results

workflows:
  build-inspect-test:
    jobs:
      # - build
        # filters:
        #   branches:
        #     only:
        #       - main
      # - inspect
      - test
